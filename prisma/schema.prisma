generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Device {
  id               String            @id @default(cuid())
  name             String
  description      String
  price            Float
  brand            String
  type             String
  image            String?
  stock            Int               @default(0)
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  reservationItems ReservationItem[]
  offers           Offer[]
}

model Reservation {
  id                 String            @id @default(cuid())
  code               String            @unique
  customerName       String
  customerEmail      String
  customerPhone      String
  comments           String?
  total              Float
  status             String            @default("pending")
  cancellationReason String?
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  items              ReservationItem[]
  offerId            String?           // ID de la oferta si la reserva fue generada desde una oferta
  offer              Offer?            @relation(fields: [offerId], references: [id])
}

model ReservationItem {
  id            String      @id @default(cuid())
  quantity      Int
  price         Float       // Precio ofertado o final
  originalPrice Float?      // Precio original del producto
  reservationId String
  deviceId      String
  device        Device      @relation(fields: [deviceId], references: [id])
  reservation   Reservation @relation(fields: [reservationId], references: [id])
}

model Offer {
  id            String       @id @default(cuid())
  customerName  String
  customerEmail String
  customerPhone String
  comments      String?
  offerPrice    Float        // Precio ofertado
  originalPrice Float        // Precio original
  quantity      Int
  status        String       @default("pending") // pending, accepted, rejected
  deviceId      String
  device        Device       @relation(fields: [deviceId], references: [id])
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  rejectionReason String?    // Raz√≥n de rechazo si aplica
  reservations  Reservation[]
}
